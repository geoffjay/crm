package layouts

templ head(title string) {
	<head>
		<meta charset="utf-8"/>
		<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
		<meta name="viewport" content="width=device-width,initial-scale=1.0"/>
		<meta name="theme-color" content="#000000"/>
		<meta name="description" content="GoTH CRM"/>
		<meta name="referrer" content="origin"/>

		<link href="/public/favicon.ico" rel="icon" />
		<link href="/public/manifest.json" rel="manifest" />
		<link href="/public/css/tailwind.css" rel="stylesheet" />

		<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/hyperscript.org@0.9.12" crossorigin></script>
		<script src="https://unpkg.com/hyperscript.org@0.9.12/dist/eventsource.js" crossorigin></script>

		<link href="https://cdn.jsdelivr.net/npm/@animxyz/core" rel="stylesheet" />

		<!-- htmx extensions -->
		<script src="https://unpkg.com/htmx.org/dist/ext/sse.js" crossorigin></script>
		<script src="/public/js/htmx.ext.shoelace.js"></script>

		if title != "" {
			<title>CRM - { title }</title>
		} else {
			<title>CRM</title>
		}
	</head>
}

func title(ctx context.Context) string {
	value := ctx.Value("title")
	if value != nil {
		return value.(string)
	}
	return ""
}

templ Base(contents templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		@head(title(ctx))
		<body class="h-screen">
			@contents
		</body>
	</html>
}
